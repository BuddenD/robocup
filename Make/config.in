/* -*- C++ -*- Tell editors this is a C++ file (despite it's .in extension) */

/*! @file config.h
    @brief A configuration file that controls the options for the project and the target robot
    
    This file is automatically generated by CMake. Do NOT modify this file. Seriously, don't modify
    this file. If you really need to put something here, then you want to modify ./Make/config.in.

    @author Jason Kulk
 */
#ifndef CONFIG_H
#define CONFIG_H

#define debug cout              // TODO: Do something smarter depending on where the debug messages should go

// define the target robotic platform
#define TARGET_IS_$ENV{TARGET_ROBOT}            // Will be TARGET_IS_NAO, TARGET_IS_NAOWEBOTS, TARGET_IS_CYCLOID, etc

// define the os the code is being compiled on
#define MY_OS_${CMAKE_SYSTEM_NAME}              // Will be MY_OS_Windows, MY_OS_Darwin, MY_OS_Linux

// define the right MY_OS_IS_XXXXXXXX
#ifdef MY_OS_Windows
    #define MY_OS_IS_WINDOWS
#else
    #undef MY_OS_IS_WINDOWS
#endif
#ifdef MY_OS_Darwin
    #define MY_OS_IS_DARWIN
#else
    #undef MY_OS_IS_DARWIN
#endif
#ifdef MY_OS_Linux
    #define MY_OS_IS_LINUX
#else
    #undef MY_OS_IS_LINUX
#endif

// now define the os of the target robotic platform
#ifdef TARGET_IS_NAOWEBOTS                      // If we are targeting webots, then the target os is my os
    #ifdef MY_OS_IS_WINDOWS
        #define TARGET_OS_IS_WINDOWS
    #else
        #undef TARGET_OS_IS_WINDOWS
    #endif
    #ifdef MY_OS_IS_DARWIN
        #define TARGET_OS_IS_DARWIN
    #else
        #undef TARGET_OS_IS_DARWIN
    #endif
    #ifdef MY_OS_IS_LINUX
        #define TARGET_OS_IS_LINUX
    #else
        #undef TARGET_OS_IS_LINUX
    #endif
#else                                           // If we are targeting an actual robot, then the target os is always linux
    #define TARGET_OS_IS_LINUX
#endif

// compile-time options for nubot
#define DEBUG_NUBOT_VERBOSITY ${DEBUG_NUBOT_VERBOSITY}

// define variable to selectivly run vision
#define USE_VISION_${USE_VISION}
#ifdef USE_VISION_ON
    #define USE_VISION
#else
    #undef USE_VISION
#endif

// vision compile-time options
#define THREAD_VISION_PRIORITY ${THREAD_VISION_PRIORITY}
#define DEBUG_VISION_VERBOSITY ${DEBUG_VISION_VERBOSITY}
#ifdef TARGET_OS_IS_LINUX                   // at the moment we 'can't monitor times properly outside of linux
    #define THREAD_VISION_MONITOR_TIME_${THREAD_VISION_MONITOR_TIME}
    #ifdef THREAD_VISION_MONITOR_TIME_ON
        #define THREAD_VISION_MONITOR_TIME
    #else
        #undef THREAD_VISION_MONITOR_TIME
    #endif
#endif

// define variable to selectivly run localisation
#define USE_LOCALISATION_${USE_LOCALISATION}
#ifdef USE_LOCALISATION_ON
    #define USE_LOCALISATION
#else
    #undef USE_LOCALISATION
#endif

// localisation compile-time options
#define DEBUG_LOCALISATION_VERBOSITY ${DEBUG_LOCALISATION_VERBOSITY}

// define variable to selectivly run behaviour
#define USE_BEHAVIOUR_${USE_BEHAVIOUR}
#ifdef USE_BEHAVIOUR_ON
    #define USE_BEHAVIOUR
#else
    #undef USE_BEHAVIOUR
#endif

// behaviour compile-time options
#define DEBUG_BEHAVIOUR_VERBOSITY ${DEBUG_BEHAVIOUR_VERBOSITY}

// define variable to selectivly run motion
#define USE_MOTION_${USE_MOTION}
#ifdef USE_MOTION_ON
    #define USE_MOTION
#else
    #undef USE_MOTION
#endif

// motion compile-time options
#define DEBUG_MOTION_VERBOSITY ${DEBUG_MOTION_VERBOSITY}
#define THREAD_MOTION_PRIORITY ${THREAD_MOTION_PRIORITY}
#ifdef TARGET_IS_LINUX
    #define THREAD_MOTION_MONITOR_TIME_${THREAD_MOTION_MONITOR_TIME}
    #ifdef THREAD_MOTION_MONITOR_TIME_ON
        #define THREAD_MOTION_MONITOR_TIME
    #else
        #undef THREAD_MOTION_MONITOR_TIME
    #endif
#endif


#define USE_NETWORK_${USE_NETWORK}
#ifdef USE_NETWORK_ON
    #define USE_NETWORK
#else
    #undef USE_NETWORK
#endif

#endif // !CONFIG_H

